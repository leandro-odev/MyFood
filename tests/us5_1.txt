# User Story 5 - Criação de Mercados
# Permita que um usuário do tipo dono de empresa crie seu mercad, restaurante ou farmacia no MyFood.
# Todos os metodos que antes funcionava apenas para restaurante ainda devem funcionar para mercado.
#
# Os dados gerais para os mercados são:
# id -> Que deve ser do tipo int e único gerado pelo sistema.
# nome -> Informado na criação do tipo String, não pode existir vários mercados com o mesmo nome com donos diferentes.
# endereco-> Informado na criação do tipo String, pode existir vários restaurantes com o mesmo endereço.
# abre -> String contendo a hora que abre no formato HH:MM.
# fecha -> String contendo a hora que fecha no formato HH:MM.
# tipoMercado -> String contendo o tipo de mercado podendo ser supermercado, minimercado, atacadista.
#
###################
# Os métodos que são utilizados nos testes podem ser vistos a seguir:
###################
# zerarSistema
# descrição: Apaga todos os dados no banco de dados do sistema.
# retorno: Sem retorno
#
# criarEmpresa(String: tipoEmpresa, int dono, String: nome, String endereco, String abre, String fecha String tipoMercado)
# descrição: Cria uma nova empresa, do tipo fornecido, no momento apenas Restaurantes e Mercado são criados.
# retorno:   Retorna o id da empresa
#
# getIdEmpresa (int idDono, String nome, int indice)
# descrição: Verifica uma empresa a qual esteja na lista do dono.
# retorno:   Retorna o id da empresa com indice informado.
#
# getAtributoEmpresa (int empresa, String atributo)
# descrição: Obtém os dados dos atributos da empresa
# retorno:  Retorna uma string com o valor do atributo.
#
# adicionarProduto(int: numero, int produto)
# descrição: Adciona um produto da empresa ao pedido
# retorno:  Sem retorno
#
# getPedidos(int  numero, String atributo)
# descrição:  obtém os dados de um pedido pelo id
# retorno:  retorna uma string com o valor do atributo.
#
# alterarFuncionamento(int mercado, String: abre, String fecha)
# descrição: Altera o horario de funcionamento do Mercado.
# retorno: Sem retorno
#
# encerrarSistema
# descrição: Finaliza a execução do programa
# retorno: Sem retorno


# Apaga toda a base de dados.
zerarSistema

criarUsuario nome="Lucas" email="lucas@ufal.com.br" senha="123senha" endereco="Rua Exemplo N 321"

criarUsuario nome="CarlosDono" email="carlos@ufal.com.br" senha="123senha" endereco="Rua Exemplo N 321" cpf="544.732.410-68"

criarUsuario nome="RobertoDono" email="roberto@ufal.com.br" senha="123senha" endereco="Rua Exemplo N 321" cpf="544.732.410-68"

id1=login email="lucas@ufal.com.br" senha="123senha"
id2=login email="carlos@ufal.com.br" senha="123senha"
id3=login email="roberto@ufal.com.br" senha="123senha"

###################
# testes de todas as outras combinações importantes para o comando criarEmpresa para mercado
###################

eid1=criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Segura N 123" abre="07:30" fecha="21:00" tipoMercado="supermercado"

eid2=criarEmpresa tipoEmpresa="mercado"  dono=${id2} nome="Conveniencias do Carlos" endereco="Rua Segura N 123" abre="06:30" fecha="23:59" tipoMercado="minimercado"

# Um dono diferente não pode cadastrar uma empresa com o mesmo nome de uma existente, o dono de um restaurante pode cadastrar uma nova empresa desde que seja em endereço diferente.

expectError "Empresa com esse nome ja existe" criarEmpresa tipoEmpresa="mercado" dono=${id3} nome="Mercado do Carlos" endereco="Rua Segura N 987" abre="07:30" fecha="21:00" tipoMercado="supermercado"

expectError "Proibido cadastrar duas empresas com o mesmo nome e local" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Segura N 123" abre="07:30" fecha="21:00" tipoMercado="supermercado"

expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="0730" fecha="21:00" tipoMercado="atacadista"
expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="12:54" fecha="2322" tipoMercado="atacadista"
expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="120:54" fecha="23:22" tipoMercado="atacadista"
expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="12:540" fecha="23:22" tipoMercado="atacadista"
expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="12:54" fecha="003:22" tipoMercado="atacadista"
expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="12:54" fecha="03:220" tipoMercado="atacadista"
expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="2:54" fecha="03:22" tipoMercado="atacadista"
expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="02:54" fecha="03:2" tipoMercado="atacadista"
expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre=":30" fecha="21:00" tipoMercado="atacadista"
expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="02:5" fecha="03:22" tipoMercado="atacadista"
expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="" fecha="25:22" tipoMercado="atacadista"
expectError "Formato de hora invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="20:52" fecha="" tipoMercado="atacadista"
expectError "Horario invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="20:52" fecha="03:22" tipoMercado="atacadista"
expectError "Horario invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="20:52" fecha="25:22" tipoMercado="atacadista"

eid3=criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="07:30" fecha="21:00" tipoMercado="atacadista"

expectError "Tipo de empresa invalido" criarEmpresa tipoEmpresa= dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="20:52" fecha="21:00" tipoMercado="atacadista"
expectError "Nome invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome= endereco="Rua Otima N 852" abre="20:52" fecha="21:00" tipoMercado="atacadista"
expectError "Endereco da empresa invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco= abre="20:52" fecha="21:00" tipoMercado="atacadista"
expectError "Horario invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre= fecha="23:22" tipoMercado="atacadista"
expectError "Horario invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="20:52" fecha= tipoMercado="atacadista"
expectError "Tipo de mercado invalido" criarEmpresa tipoEmpresa="mercado" dono=${id2} nome="Mercado do Carlos" endereco="Rua Otima N 852" abre="20:52" fecha="23:22" tipoMercado=

# Apenas usuários do tipo dono de mercado podem criar uma empresa.
expectError "Usuario nao pode criar uma empresa" criarEmpresa tipoEmpresa="mercado" dono=${id1} nome="Mercado do  Lucas" endereco="Rua Amigavel N 22" abre="07:30" fecha="21:00" tipoMercado="supermercado"

# Obtendo donos
expectError "Usuario nao pode criar uma empresa" getEmpresasDoUsuario idDono=${id1}
expect "{[[Mercado do Carlos, Rua Segura N 123], [Conveniencias do Carlos, Rua Segura N 123], [Mercado do Carlos, Rua Otima N 852]]}" getEmpresasDoUsuario idDono=${id2}
expect "{[]}" getEmpresasDoUsuario idDono=${id3}

# Obtendo os dados dos mercados. 
eid4=criarEmpresa tipoEmpresa="mercado" dono=${id3} nome="Mercado do Roberto" endereco="Rua Segura N 123" abre="07:30" fecha="21:00" tipoMercado="supermercado"

expect "Mercado do Roberto" getAtributoEmpresa empresa=${eid4} atributo="nome"
expect "Rua Segura N 123" getAtributoEmpresa empresa=${eid4} atributo="endereco"
expect "07:30" getAtributoEmpresa empresa=${eid4} atributo="abre"
expect "21:00" getAtributoEmpresa empresa=${eid4} atributo="fecha"
expect "RobertoDono" getAtributoEmpresa empresa=${eid4} atributo="dono"
expectError "Atributo invalido" getAtributoEmpresa empresa=${eid4} atributo="vizinhos"
expectError "Atributo invalido" getAtributoEmpresa empresa=${eid4} atributo=""
expectError "Empresa nao cadastrada" getAtributoEmpresa empresa=9999 atributo="nome"
expectError "Empresa nao cadastrada" getAtributoEmpresa empresa=9999 atributo=""
expectError "Atributo invalido" getAtributoEmpresa empresa=${eid4} atributo=

expect "supermercado" getAtributoEmpresa empresa=${eid1} atributo="tipoMercado"
expect "minimercado" getAtributoEmpresa empresa=${eid2} atributo="tipoMercado"
expect "atacadista" getAtributoEmpresa empresa=${eid3} atributo="tipoMercado"

# Obtendo o index de uma empresa. 

expect ${eid1} getIdEmpresa idDono=${id2} nome="Mercado do Carlos" indice=0
expect ${eid3} getIdEmpresa idDono=${id2} nome="Mercado do Carlos" indice=1
expect ${eid2} getIdEmpresa idDono=${id2} nome="Conveniencias do Carlos" indice=0
expectError "Indice maior que o esperado" getIdEmpresa idDono=${id2} nome="Mercado do Carlos" indice=2
expectError "Nao existe empresa com esse nome" getIdEmpresa idDono=${id2} nome="Loginha do Carlos" indice=0

expectError "Nome invalido" getIdEmpresa idDono=${id2} nome=  indice=2
expectError "Nome invalido" getIdEmpresa idDono=${id2} nome=""  indice=2
expectError "Indice invalido" getIdEmpresa idDono=${id2} nome="Pastelaria do Carlos" indice=-1

# Criando produtos 
p1=criarProduto empresa=${eid1} nome="Refrigerante" valor=2.40  categoria="bebida"
p2=criarProduto empresa=${eid1} nome="Sabao" valor=1.25  categoria="limpeza"
p3=criarProduto empresa=${eid1} nome="1kg Batatas" valor=5.75  categoria="verdura"
p4=criarProduto empresa=${eid2} nome="Caneta" valor=2.00  categoria="escolar"

###################
# testes de todas as outras combinações importantes para o comando criarPedido
###################
expectError "Dono de empresa nao pode fazer um pedido" criarPedido cliente=${id2} empresa=${eid1}

expectError "Nao existe pedido em aberto" adicionarProduto numero=9999 produto=${p1}

pe1=criarPedido cliente=${id1} empresa=${eid1}
expectError "Nao e permitido ter dois pedidos em aberto para a mesma empresa" criarPedido cliente=${id1} empresa=${eid1}

pe2=criarPedido cliente=${id1} empresa=${eid2}

###################
# testes de todas as combinações importantes para o comando adicionarProduto
###################

 adicionarProduto numero=${pe1} produto=${p1}
 adicionarProduto numero=${pe1} produto=${p2}
 adicionarProduto numero=${pe1} produto=${p3}

expectError "O produto nao pertence a essa empresa" adicionarProduto pedido=${pe2} produto=${p1}

# O mesmo produto é adicionado várias vezes ao pedido.
adicionarProduto numero=${pe2} produto=${p4}
adicionarProduto numero=${pe2} produto=${p4}
adicionarProduto numero=${pe2} produto=${p4}

###################
# testes de todas as combinações importantes para o comando getPedidos
###################

expectError "Atributo invalido" getPedidos pedido=${pe1} atributo=
expectError "Atributo invalido" getPedidos pedido=${pe1} atributo=""
expectError "Atributo nao existe" getPedidos pedido=${pe1} atributo="local"

expect "Lucas" getPedidos pedido=${pe1} atributo="cliente"
expect "Mercado do Carlos" getPedidos pedido=${pe1} atributo="empresa"
expect "aberto" getPedidos pedido=${pe1} atributo="estado"
expect "{[Refrigerante, Sabao, 1kg Batatas]}" getPedidos pedido=${pe1} atributo="produtos"
expect "9.40" getPedidos pedido=${pe1} atributo="valor"

expect "Lucas" getPedidos pedido=${pe2} atributo="cliente"
expect "Conveniencias do Carlos" getPedidos pedido=${pe2} atributo="empresa"
expect "aberto" getPedidos pedido=${pe2} atributo="estado"
expect "{[Caneta, Caneta, Caneta]}" getPedidos pedido=${pe2} atributo="produtos"
expect "6.00" getPedidos pedido=${pe2} atributo="valor"

###################
# testes de todas as combinações importantes para o comando fecharPedido
###################

expectError "Pedido nao encontrado" fecharPedido numero=9999
fecharPedido numero=${pe1}

expect "preparando"  getPedidos pedido=${pe1} atributo="estado"

expectError "Nao e possivel adcionar produtos a um pedido fechado"  adicionarProduto numero=${pe1} produto=${p1}

# Abre um novo pedido agora que o anterior está fechado.
pe3=criarPedido cliente=${id1} empresa=${eid1}

###################
# testes de todas as combinações importantes para o comando removerProduto
###################

expectError "Produto invalido" removerProduto pedido=${pe2} produto=
expectError "Produto invalido" removerProduto pedido=${pe2} produto=""

expectError "Produto nao encontrado" removerProduto pedido=${pe2} produto="Sorvete"
expectError "Nao e possivel remover produtos de um pedido fechado" removerProduto pedido=${pe1} produto="Refrigerante"

removerProduto pedido=${pe2} produto="Caneta"

expect "{[Caneta, Caneta]}" getPedidos pedido=${pe2} atributo="produtos"
expect "4.00"  getPedidos pedido=${pe2} atributo="valor"

expect ${pe1} getNumeroPedido cliente=${id1} empresa=${eid1} indice=0
expect ${pe2} getNumeroPedido cliente=${id1} empresa=${eid2} indice=0
expect ${pe3} getNumeroPedido cliente=${id1} empresa=${eid1} indice=1

###################
# testes de todas as combinações e erros ao tentar mudar o horario de funcionamento.
###################

expectError "Formato de hora invalido" alterarFuncionamento mercado=${eid4} abre="1254" fecha="23:22"
expectError "Formato de hora invalido" alterarFuncionamento mercado=${eid4} abre="12:54" fecha="2322"
expectError "Formato de hora invalido" alterarFuncionamento mercado=${eid4} abre="120:54" fecha="23:22"
expectError "Formato de hora invalido" alterarFuncionamento mercado=${eid4} abre="12:540" fecha="23:22"
expectError "Formato de hora invalido" alterarFuncionamento mercado=${eid4} abre="12:54" fecha="003:22"
expectError "Formato de hora invalido" alterarFuncionamento mercado=${eid4} abre="12:54" fecha="03:220"
expectError "Formato de hora invalido" alterarFuncionamento mercado=${eid4} abre="2:54" fecha="03:22"
expectError "Formato de hora invalido" alterarFuncionamento mercado=${eid4} abre="02:54" fecha="3:22"
expectError "Formato de hora invalido" alterarFuncionamento mercado=${eid4} abre="02:54" fecha="03:2"
expectError "Formato de hora invalido" alterarFuncionamento mercado=${eid4} abre="02:5" fecha="03:22"
expectError "Horario invalido" alterarFuncionamento mercado=${eid4} abre="20:52" fecha="03:22"
expectError "Horario invalido" alterarFuncionamento mercado=${eid4} abre="20:52" fecha="25:22"
expectError "Horario invalido" alterarFuncionamento mercado=${eid4} abre= fecha="23:22"
expectError "Horario invalido" alterarFuncionamento mercado=${eid4} abre="20:52" fecha=

# Apernas mercados tem o horario de antendimento.
eid5=criarEmpresa tipoEmpresa="restaurante" dono=${id2} nome="Pastelaria do Carlos" endereco="Rua Segura N 987" tipoCozinha="brasileira"

expectError "Nao e um mercado valido" alterarFuncionamento mercado=${eid5} abre="05:25" fecha="22:00"

alterarFuncionamento mercado=${eid4} abre="05:25" fecha="22:00"

expect "05:25" getAtributoEmpresa empresa=${eid4} atributo="abre"
expect "22:00" getAtributoEmpresa empresa=${eid4} atributo="fecha"

encerrarSistema
quit
